@using roadcap.recipes.entities.Models
@model IEnumerable<Recipe>

@{
    ViewData["Title"] = "Find Recipes";
}
<br />
<div class="container body-drop h100">
    <div class="row justify-content-center align-items-center">
        <div class="col-12 col-md-10 col-lg-8">
            @using (Html.BeginForm("Find", "Recipes", FormMethod.Get, new { @class = "card card-sm" }))
            {
                <div class="card-body row no-gutters align-items-center">
                    <div class="col-auto">
                        <i class="fas fa-search h4 text-body"></i>
                    </div>
                    <!--end of col-->
                    <div class="col">
                        <input class="form-control form-control-lg form-control-borderless" type="search" placeholder="Search recipes or ingredients" name="searchTerm" id="searchTerm" />
                    </div>
                    <!--end of col-->
                    <div class="col-auto">
                        <button class="btn btn-lg btn-success" type="submit">Search</button>
                    </div>
                    <!--end of col-->
                </div>
            }
        </div>
    </div>
    <div class="row">&nbsp;</div>
    <div class="row"><a asp-action="Add">New Recipe</a></div>
    <div class="row">
        <table id="recipeTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Instructions)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr id="@("row" + item.RecipeId)">
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @item.Description.Substring(0, Math.Min(item.Description.Length, 100)) 
                        </td>
                        <td>
                            @item.Instructions.Substring(0, Math.Min(item.Instructions.Length, 100)) 
                        </td>
                        <td>
                            <a asp-action="Print" asp-route-id="@item.RecipeId">Print</a> | 
                            <a asp-action="Edit" asp-route-id="@item.RecipeId">Edit</a> |
                            <a id="deleteLink" href="javascript:void(0);" onclick="deleteRecipe(@item.RecipeId)">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts
{
    <script>
        function deleteRecipe(id) {
            var r = confirm('Are you sure you want to delete this recipe?');
            if (r == true) {
                $.ajax({
                    url: 'https://localhost:44356/api/Recipes/' + id,
                    method: 'DELETE',
                    success: function (data) {
                        $('table#recipeTable tr#row' + id).remove();
                    }
                });
            }
        }
    </script>
} 